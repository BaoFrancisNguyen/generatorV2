# DÉPENDANCES PYTHON - GÉNÉRATEUR MALAYSIA v3.0
# =====================================================
# 
# Ce fichier contient toutes les dépendances nécessaires pour faire
# fonctionner le générateur de données énergétiques Malaysia avec
# l'architecture modulaire version 3.0.
#
# Installation: pip install -r requirements.txt
#

# === FRAMEWORK WEB ===
Flask==3.0.0
Werkzeug==3.0.1
flask-cors==4.0.0

# === MANIPULATION DE DONNÉES ===
pandas==2.1.4
numpy==1.25.2
pyarrow==14.0.1                 # Support Parquet optimisé

# === GÉNÉRATION DE DONNÉES ===
Faker==20.1.0                   # Génération de données synthétiques
python-dateutil==2.8.2         # Manipulation avancée de dates

# === REQUÊTES HTTP ET APIs ===
requests==2.31.0               # Requêtes HTTP pour OSM
urllib3==2.1.0                 # Support HTTP avancé

# === GÉOSPATIAL ET CARTOGRAPHIE ===
# Note: Pas de dépendances lourdes comme GeoPandas pour garder l'installation simple
# La gestion géospatiale est faite avec des calculs basiques suffisants pour OSM

# === FORMATS D'EXPORT ===
openpyxl==3.1.2                # Export Excel (.xlsx)
xlsxwriter==3.1.9              # Export Excel optimisé

# === VALIDATION ET SÉRIALISATION ===
jsonschema==4.20.0             # Validation de schémas JSON
marshmallow==3.20.1            # Sérialisation/désérialisation

# === UTILITAIRES SYSTÈME ===
psutil==5.9.6                  # Monitoring système
pathlib2==2.3.7; python_version < "3.4"  # Support pathlib pour Python < 3.4

# === TIMEZONE ET INTERNATIONALISATION ===
pytz==2023.3                   # Support timezone complet
babel==2.14.0                  # Internationalisation

# === LOGGING ET MONITORING ===
colorlog==6.8.0                # Logs colorés
structlog==23.2.0              # Logs structurés

# === PERFORMANCE ET CACHE ===
cachetools==5.3.2              # Système de cache simple
redis==5.0.1                   # Support Redis (optionnel, pour production)

# === SÉCURITÉ ===
cryptography==41.0.8           # Chiffrement et sécurité
bcrypt==4.1.2                  # Hachage sécurisé

# === TESTING (pour développement) ===
pytest==7.4.3                  # Framework de tests
pytest-flask==1.3.0            # Tests Flask
pytest-cov==4.1.0              # Couverture de code
pytest-mock==3.12.0            # Mocking pour tests

# === DÉVELOPPEMENT ET DEBUG ===
flask-debugtoolbar==0.13.1     # Barre de debug Flask
ipython==8.18.1                # Shell interactif amélioré
memory-profiler==0.61.0        # Profiling mémoire

# === DOCUMENTATION ===
Sphinx==7.2.6                  # Génération de documentation
sphinx-rtd-theme==2.0.0        # Thème Read the Docs

# === LINTING ET FORMATAGE ===
flake8==6.1.0                  # Linting Python
black==23.11.0                 # Formatage automatique
isort==5.12.0                  # Tri des imports

# === PRODUCTION ET DÉPLOIEMENT ===
gunicorn==21.2.0               # Serveur WSGI pour production
waitress==2.1.2               # Serveur WSGI alternatif (Windows friendly)
supervisor==4.2.5             # Gestion de processus

# === MONITORING PRODUCTION ===
sentry-sdk[flask]==1.38.0     # Monitoring d'erreurs
prometheus-client==0.19.0     # Métriques Prometheus

# =====================================================
# INSTALLATION PAR ENVIRONNEMENT
# =====================================================

# DÉVELOPPEMENT MINIMAL:
# pip install Flask pandas numpy pyarrow requests Faker

# DÉVELOPPEMENT COMPLET:
# pip install -r requirements.txt

# PRODUCTION:
# pip install -r requirements.txt
# (puis configurer gunicorn, redis, etc.)

# =====================================================
# COMPATIBILITÉ
# =====================================================

# Python: 3.8+
# OS: Windows, macOS, Linux
# Architecture: x86_64, ARM64

# =====================================================
# NOTES SPÉCIALES
# =====================================================

# 1. PyArrow est requis pour un support Parquet performant
# 2. Redis est optionnel mais recommandé pour la production
# 3. Les dépendances de test peuvent être omises en production
# 4. Cryptography peut nécessiter des outils de compilation sur certains systèmes
# 5. Pour ARM64 (Apple Silicon), toutes les dépendances ont des wheels disponibles

# =====================================================
# DÉPENDANCES ALTERNATIVES
# =====================================================

# Si problème avec PyArrow:
# fastparquet==2023.10.1

# Si problème avec Redis:
# diskcache==5.6.3

# Si problème avec Cryptography:
# simple-crypt==4.1.7

# =====================================================
# MISE À JOUR DES DÉPENDANCES
# =====================================================

# Vérifier les mises à jour:
# pip list --outdated

# Mettre à jour une dépendance:
# pip install --upgrade <package>

# Mettre à jour toutes les dépendances:
# pip install --upgrade -r requirements.txt

# Geler les versions actuelles:
# pip freeze > requirements-frozen.txt
